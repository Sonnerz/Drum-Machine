{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Drumpad","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handlePlay","bind","assertThisInitialized","handleKeydown","document","addEventListener","removeEventListener","event","key","toUpperCase","letter","audio","getElementById","volume","volumeLevel","play","displayName","name","react_default","a","createElement","className","id","onClick","src","url","React","Component","PadBank","_this2","clipData","map","pad","App_Drumpad","index","ind","VolumeControl","_this3","handleInput","slider","setVol","value","htmlFor","type","min","max","step","defaultValue","onInput","DrumMachine","_this4","handleSetDisplay","setState","displayText","state","audioData","handleVolume","vol","Math","floor","App_PadBank","App_VolumeControl","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4b74267e.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\n//component for one drum pad\nclass Drumpad extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handlePlay = this.handlePlay.bind(this);\n\t\tthis.handleKeydown = this.handleKeydown.bind(this);\n\t}\n\tcomponentDidMount() {\n\t\tdocument.addEventListener(\"keydown\", this.handleKeydown, false);\n\t}\n\tcomponentWillUnmount() {\n\t\tdocument.removeEventListener(\"keydown\", this.handleKeydown, false);\n\t}\n\thandleKeydown() {\n\t\t//if the key pressed is the same as the drum pad key value in the id\n\n\t\t// eslint-disable-next-line no-restricted-globals\n\t\tlet letter = event.key.toUpperCase();\n\t\tif (letter === this.props.letter) {\n\t\t\tthis.handlePlay();\n\t\t}\n\t}\n\thandlePlay() {\n\t\tconst audio = document.getElementById(this.props.letter);\n\t\taudio.volume = this.props.volumeLevel;\n\t\taudio.play();\n\t\t// update the display div with drum pad div id\n\t\tthis.props.displayName(this.props.name);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"drum-pad\" id={this.props.name} onClick={this.handlePlay}>\n\t\t\t\t<audio\n\t\t\t\t\tid={this.props.letter}\n\t\t\t\t\tclassName=\"clip\"\n\t\t\t\t\tsrc={this.props.url}\n\t\t\t\t/>\n\t\t\t\t{this.props.letter}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass PadBank extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"pad-bank\">\n\t\t\t\t{/* clipData is the data stored in the DrumMachine state for */}\n\t\t\t\t{this.props.clipData.map(pad => (\n\t\t\t\t\t<Drumpad\n\t\t\t\t\t\tkey={pad.index}\n\t\t\t\t\t\tind={pad.index}\n\t\t\t\t\t\tletter={pad.key}\n\t\t\t\t\t\tname={pad.name}\n\t\t\t\t\t\turl={pad.url}\n\t\t\t\t\t\tdisplayName={this.props.displayName}\n\t\t\t\t\t\tvolumeLevel={this.props.volumeLevel}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass VolumeControl extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleInput = this.handleInput.bind(this);\n\t}\n\thandleInput() {\n\t\tconst slider = document.getElementById(\"vol-slider\");\n\t\tthis.props.setVol(slider.value);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"volume\">\n\t\t\t\t<label htmlFor=\"volume\">Volume</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"range\"\n\t\t\t\t\tmin=\"0\"\n\t\t\t\t\tmax=\"1\"\n\t\t\t\t\tstep=\"0.01\"\n\t\t\t\t\tdefaultValue={this.props.volumeLevel}\n\t\t\t\t\tclassName=\"slider\"\n\t\t\t\t\tid=\"vol-slider\"\n\t\t\t\t\tonInput={this.handleInput}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass DrumMachine extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdisplayText: \" \",\n\t\t\tclipData: audioData,\n\t\t\tvolume: 0.3\n\t\t};\n\t\tthis.handleSetDisplay = this.handleSetDisplay.bind(this);\n\t\tthis.handleVolume = this.handleVolume.bind(this);\n\t}\n\thandleSetDisplay = name => {\n\t\tthis.setState({\n\t\t\tdisplayText: name\n\t\t});\n\t};\n\thandleVolume(vol) {\n\t\tthis.setState({\n\t\t\tvolume: vol,\n\t\t\tdisplayText: \"Volume \" + Math.floor(vol * 100)\n\t\t});\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"wrapper\">\n\t\t\t\t<h1><i className=\"fas fa-drum\"></i> Drum Machine</h1>\n\t\t\t\t<div id=\"app-container\">\n\t\t\t\t\t<div id=\"drum-machine\">\n\t\t\t\t\t\t<PadBank\n\t\t\t\t\t\t\tclipData={this.state.clipData}\n\t\t\t\t\t\t\tdisplayName={this.handleSetDisplay}\n\t\t\t\t\t\t\tvolumeLevel={this.state.volume}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"controls\">\n\t\t\t\t\t\t<div id=\"display\">{this.state.displayText}</div>\n\t\t\t\t\t\t<VolumeControl\n\t\t\t\t\t\t\tvolumeLevel={this.state.volume}\n\t\t\t\t\t\t\tsetVol={this.handleVolume}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst audioData = [\n\t{\n\t\tindex: 0,\n\t\tkey: \"Q\",\n\t\tname: \"Heater-1\",\n\t\turl: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\"\n\t},\n\t{\n\t\tindex: 1,\n\t\tkey: \"W\",\n\t\tname: \"Heater-2\",\n\t\turl: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\"\n\t},\n\t{\n\t\tindex: 2,\n\t\tkey: \"E\",\n\t\tname: \"Heater-3\",\n\t\turl: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\"\n\t},\n\t{\n\t\tindex: 3,\n\t\tkey: \"A\",\n\t\tname: \"Heater-4\",\n\t\turl: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\"\n\t},\n\t{\n\t\tindex: 4,\n\t\tkey: \"S\",\n\t\tname: \"Clap\",\n\t\turl: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\"\n\t},\n\t{\n\t\tindex: 5,\n\t\tkey: \"D\",\n\t\tname: \"Open HH\",\n\t\turl: \"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\"\n\t},\n\t{\n\t\tindex: 6,\n\t\tkey: \"Z\",\n\t\tname: \"Kick n Hat\",\n\t\turl: \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\"\n\t},\n\t{\n\t\tindex: 7,\n\t\tkey: \"X\",\n\t\tname: \"Kick\",\n\t\turl: \"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\"\n\t},\n\t{\n\t\tindex: 8,\n\t\tkey: \"C\",\n\t\tname: \"Closed HH\",\n\t\turl: \"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\"\n\t}\n];\nexport default DrumMachine;\n//ReactDOM.render(<DrumMachine />, document.getElementById(\"root\"));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App />, document.getElementById('app'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}